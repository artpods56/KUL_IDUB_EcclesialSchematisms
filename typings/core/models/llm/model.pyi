"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Optional
from PIL import Image
from omegaconf import DictConfig
from core.models.base import ConfigurableModel

class LLMModel(ConfigurableModel):
    """LLM model wrapper with unified predict interface."""
    def __init__(self, config: DictConfig, enable_cache: bool = ..., test_connection: bool = ...) -> None:
        ...
    
    @classmethod
    def from_config(cls, config: DictConfig) -> LLMModel:
        ...
    
    def predict(self, image: Optional[Image.Image] = ..., text: Optional[str] = ..., **kwargs) -> Dict[str, Any]:
        """Generate predictions_data using the LLM model.

        Supports three modes:
        - Image-only: Provide only `image` parameter
        - Text-only: Provide only `text` parameter
        - Multimodal: Provide both `image` and `text` parameters

        Args:
            image: PIL Image object for vision processing
            text: OCR text string for text processing
            **kwargs: Additional context (e.g., hints from other models)

        Returns:
            Dictionary with structured prediction results

        Raises:
            ValueError: If neither image nor text is provided
        """
        ...
    


