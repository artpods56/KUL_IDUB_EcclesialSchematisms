"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Optional, Union
from mistralai import Mistral
from openai import OpenAI
from omegaconf import DictConfig
from PIL.Image import Image
from core.models.llm.prompt_manager import PromptManager
from openai.types.shared.chat_model import ChatModel

CLIENT_TYPE = Union[Mistral, OpenAI]
LLM_MODELS = Union[ChatModel, str]
logger = ...
class LLMInterface:
    """
    Core LLM interface for making API calls to different LLM providers.
    Handles client initialization and basic message generation.
    """
    def __init__(self, interface_config: DictConfig, prompt_manager: PromptManager, api_type: str, api_key: Optional[str] = ..., test_connection: bool = ...) -> None:
        ...
    
    def generate_response(self, messages): # -> OptionalNullable[AssistantMessageContent]:
        """Generate response from LLM given messages."""
        ...
    
    def generate_vision_response(self, pil_image: Image, system_prompt: str, user_prompt: str, context: Optional[Dict[str, Any]] = ...): # -> tuple[OptionalNullable[AssistantMessageContent] | Any, list[Any]]:
        """Generate response from vision-capable LLM.

        Returns response and the messages used for generation.
        """
        ...
    
    def generate_text_response(self, system_prompt: str, user_prompt: str, context: Optional[Dict[str, Any]] = ...): # -> tuple[OptionalNullable[AssistantMessageContent] | Any, list[Dict[str, str]]]:
        """Generate text-only response from LLM.

        Returns response and the messages used for generation.
        """
        ...
    


