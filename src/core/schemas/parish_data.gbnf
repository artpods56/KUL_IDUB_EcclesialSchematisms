root ::= (" "| "\n") grammar-models
grammar-models ::= page-data
page-data ::= "{" "\n"  ws "\"page_number\"" ":" ws page-data-page-number-optional "," "\n"  ws "\"entries\"" ":" ws page-data-entries "\n" ws "}"
page-data-page-number-optional ::= string | null
parish-entry ::= "{" "\n"  ws "\"deanery\"" ":" ws parish-entry-deanery-optional "," "\n"  ws "\"parish\"" ":" ws string "," "\n"  ws "\"dedication\"" ":" ws parish-entry-dedication-optional "," "\n"  ws "\"building_material\"" ":" ws parish-entry-building-material-optional "\n" ws "}"
parish-entry-deanery-optional ::= string | null
parish-entry-dedication-optional ::= string | null
parish-entry-building-material-optional ::= string | null
page-data-entries ::= "[" ws parish-entry ("," ws parish-entry)*  "]" 
boolean ::= "true" | "false"
null ::= "null"
string ::= "\"" (
        [^"\\] |
        "\\" (["\\/bfnrt] | "u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F])
      )* "\"" ws
ws ::= ([ \t\n] ws)?
float ::= ("-"? ([0-9] | [1-9] [0-9]*)) ("." [0-9]+)? ([eE] [-+]? [0-9]+)? ws
integer ::= [0-9]+