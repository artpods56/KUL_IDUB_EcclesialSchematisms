x-logging:
  logging: &default-logging
    driver: "local"
    options:
      max-size: "10m"
      max-file: "3"

services:
  label-studio:
    image: heartexlabs/label-studio:latest
    restart: unless-stopped
    container_name: label-studio
    ports:
      - "8080:8080"
#    volumes:
#      - ./data:/label-studio/data:rw
    env_file:
      - .env.dev
    command: label-studio
    depends_on:
      - db
      - minio

  ml-backend:
    container_name: label-studio-ml-backend-dev
    build:
      context: ./backends/${LABEL_STUDIO_ML_BACKEND} 
      args:
        TEST_ENV: ${TEST_ENV}
    ports:
      - "9090:9090"
    volumes:
      - ./backends/${LABEL_STUDIO_ML_BACKEND}:/app:rw
    env_file:
      - .env.dev
    command: >
      label-studio-ml start . 
        --host 0.0.0.0 --port 9090
    # deploy: 
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    # runtime: nvidia
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all
    # develop:
    #     watch:
    #       - path: ./backends/${LABEL_STUDIO_ML_BACKEND}
    #         target: /app
    #         action: sync
  db:
    image: pgautoupgrade/pgautoupgrade:13-alpine
    hostname: db
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    env_file:
      - .env.dev
    ports:
      - "5433:5432"

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --address ":9000" --console-address ":9009"
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: mc ready local 
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - "9000:9000"
      - "9009:9009"
    volumes:
      - minio-data:/data
    env_file:
      - .env.dev
    
  minio-sync:
    image: minio/mc:latest
    env_file: 
      - .env.dev 
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./sync-minio.sh:/scripts/sync-minio.sh
      - ../data:/data:rw
    entrypoint: /bin/sh -c "/scripts/sync-minio.sh"
    restart: "no"
    profiles: ["sync"]

  prometheus:
    image: quay.io/prometheus/prometheus:v2.37.1
    restart: unless-stopped
    logging: *default-logging
    ports:
      - "9099:9099"
    volumes:
      - "./prometheus/minio/prometheus.yaml:/etc/prometheus/prometheus.yaml"
      - "prometheus-data:/prometheus"
    env_file:
      - .env.dev
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"


  tests:
    container_name: ml-backend-tests
    build:
      context: ./backends/${LABEL_STUDIO_ML_BACKEND}
      dockerfile: Dockerfile.dev
      args:
        TEST_ENV: ${TEST_ENV}

    env_file:
      - .env.dev
    volumes:
      - ./backends/${LABEL_STUDIO_ML_BACKEND}:/app:rw
    profiles: ["test"]
    restart: unless-stopped
    command: ptw --runner "pytest -q --disable-warnings"
    tty: true
    # develop:
    #   watch:
    #     - path: ./backends/${LABEL_STUDIO_ML_BACKEND}
    #       target: /app
    #       action: sync+restart


volumes:
  minio-data:
  prometheus-data:
